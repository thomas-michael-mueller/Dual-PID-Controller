apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    namespace 'black.mueller.pid'
    compileSdkVersion 34

    defaultConfig {
        applicationId 'black.mueller.pid'
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 1
        versionName '1.0.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.24'

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.4'
    implementation 'androidx.activity:activity-ktx:1.9.2'
    implementation 'androidx.fragment:fragment-ktx:1.8.3'
    implementation 'androidx.datastore:datastore-preferences:1.1.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}

// Provide a local 'wrapper' task so running 'gradle wrapper' inside the app/
// folder does not fail. Preferred is running from android/ root.
tasks.register('wrapper', Wrapper) {
    gradleVersion = '8.7'
    distributionType = Wrapper.DistributionType.BIN
    distributionUrl = "https://services.gradle.org/distributions/gradle-8.7-bin.zip"
    validateDistributionUrl = true
}

// Some IDEs request this legacy task; define a no-op to avoid failures.
tasks.register('prepareKotlinBuildScriptModel') { }
